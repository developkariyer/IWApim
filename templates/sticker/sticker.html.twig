{% extends 'sticker/base.html.twig' %}
{% block title %} Sticker {% endblock %}
{% block content %}


<div class="container mt-2">
    <div class="row">
        <div class="col-12">
            <h1>Groups</h1>
            <div class="dropdown mt-4">
                <button class="btn btn-primary dropdown-toggle w-100" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                    Select Group
                </button>
                <ul class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton">
                    {% for group in groups %}
                        <li>
                            <a class="dropdown-item" href="#" onclick="loadStickers({{ group.id }})">
                                {{ group.name }}
                            </a>
                        </li>
                    {% else %}
                        <li>
                            <span class="dropdown-item text-muted">No groups available.</span>
                        </li>
                    {% endfor %}
                </ul>
            </div>
            <div class="mt-3">
                <a href="{{ path('sticker_new_group') }}" class="btn btn-success w-100">New Group</a>
            </div>
            <div class="mt-3">
                <a href="{{ path('sticker_new') }}" class="btn btn-success w-100">New Sticker</a>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="row mt-2">
                <div class="col-12 table-responsive"  id="stickers-container">
                    <input type="text" id="searchInput" placeholder="Search..." class="form-control mb-3" onkeyup="searchTable()">
                    <table class="table table-striped">
                        <thead>
                        <tr>
                            <th scope="col">Product Code</th>
                            <th scope="col">Iwasku</th>
                            <th scope="col">Category</th>
                            <th scope="col">Product Name</th>
                            <th scope="col">Image</th>
                        </tr>
                        </thead>
                        <tbody id="stickers-table-body">
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>



{% endblock %}


{% block body_scripts %}
    <script>
        function loadStickers(groupId) {
            selectedGroupId = groupId;
            highlightSelectedGroup(groupId);
            const tableBody = document.getElementById('stickers-table-body');
            tableBody.innerHTML = '<tr><td colspan="7">Loading...</td></tr>';
            fetch(`/sticker/get-stickers/${groupId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const rows = data.stickers.map(sticker => `
                    <tr>
                        <td>${sticker.product_code}</td>
                        <td >${sticker.iwasku}</td>
                        <td>${sticker.category}</td>
                        <td>
                            <a href="${sticker.sticker_link}" target="_blank">
                                ${sticker.product_name}
                            </a>
                            <br>
                            ${sticker.attributes ? sticker.attributes.split(' ').join('<br>') : ''}
                        </td>
                        <td "><img src="${sticker.image_link}" alt="Image" style="max-height: 80px; max-width: 100%; height: auto; width: auto;"></td>
                    </tr>
                `).join('');
                        tableBody.innerHTML = rows;
                    } else {
                        tableBody.innerHTML = '<tr><td colspan="7">No stickers available for this group.</td></tr>';
                    }
                })
                .catch(error => {
                    console.error('Error fetching stickers:', error);
                    tableBody.innerHTML = '<tr><td colspan="7">An error occurred while loading stickers.</td></tr>';
                });
        }
        function searchTable() {
            var input, filter, table, tr, td, i, j, txtValue;
            input = document.getElementById("searchInput");
            filter = input.value.toUpperCase();
            table = document.querySelector("table");
            tr = table.getElementsByTagName("tr");

            for (i = 1; i < tr.length; i++) {
                tr[i].style.display = "none";
                td = tr[i].getElementsByTagName("td");
                for (j = 0; j < td.length; j++) {
                    if (td[j]) {
                        txtValue = td[j].textContent || td[j].innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            tr[i].style.display = "";
                            break;
                        }
                    }
                }
            }
        }
        function highlightSelectedGroup(groupId) {
            const groupLinks = document.querySelectorAll('.list-group-item');
            groupLinks.forEach(link => {
                if (parseInt(link.dataset.groupId) === groupId) {
                    link.classList.add('active');
                    link.setAttribute('aria-current', 'true');
                } else {
                    link.classList.remove('active');
                    link.removeAttribute('aria-current');
                }
            });
        }
    </script>
{% endblock %}
