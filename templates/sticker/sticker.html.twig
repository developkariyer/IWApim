{% extends 'sticker/base.html.twig' %}
{% block title %} Sticker {% endblock %}
{% block content %}


<div class="container mt-2">
    <div class="row">
        <div class="col-12">
            <div class="row mt-2">
                <div class="col-12 col-md-3 mb-2">
                    <a href="{{ path('sticker_new_group') }}" class="btn btn-success w-100">Yeni Grup</a>
                </div>
                <div class="col-12 col-md-3 mb-2">
                    <a href="{{ path('sticker_new') }}" class="btn btn-success w-100">Yeni Etiket</a>
                </div>
                <div class="col-12 col-md-3 mb-2">
                    <input type="text" id="searchInput" placeholder="Ara..." class="form-control mb-3" >
                </div>
                <div class="col-12 col-md-3 mb-2">
                    <div class="dropdown">
                        <button class="btn btn-outline-dark dropdown-toggle text-truncate w-100" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                            Grup Seç
                        </button>
                        <ul class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton">
                            {% for group in groups %}
                                <li>
                                    <a class="dropdown-item text-truncate" href="#" onclick="selectGroup('{{ group.name }}', {{ group.id }})">
                                        {{ group.name }}
                                    </a>
                                </li>
                            {% else %}
                                <li>
                                    <span class="dropdown-item text-muted">Grup Yok</span>
                                </li>
                            {% endfor %}
                        </ul>
                    </div>
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-12"  id="stickers-container" style="overflow-x: auto;">

                </div>
                <nav class="col-12" aria-label="Page navigation">
                    <ul id="pagination-container" class="pagination justify-content-center">
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>
{% endblock %}


{% block body_scripts %}
    <script>
        let currentPage = 1;
        let totalPages = 1;
        let selectedGroupId = null;
        let searchTerm = '';

        let timeoutId;

        document.getElementById('searchInput').addEventListener('input', function() {
            searchTerm = this.value;
            let charCount = searchTerm.length;
            if (searchTerm.trim() === '' ) {
                clearTimeout(timeoutId);
                loadStickers(selectedGroupId, currentPage);
            }
            if (charCount > 2) {
                clearTimeout(timeoutId);
                timeoutId = setTimeout(function() {
                    loadStickers(selectedGroupId, currentPage, searchTerm);
                }, 250);
            }
        });

        function loadStickers(groupId, page = 1,  searchTerm = '') {
            const paginationContainer = document.getElementById('pagination-container');
            highlightSelectedGroup(groupId);
            selectedGroupId = groupId;
            currentPage = page;
            const container = document.getElementById('stickers-container');
            container.innerHTML = '<p>Loading...</p>';
            const searchParam = searchTerm !== '' ? `&searchTerm=${encodeURIComponent(searchTerm)}` : '';
            let url = `/sticker/get-stickers/${groupId}?page=${page}&limit=5`;
            if (searchParam) {
                url += searchParam;
            }
            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch stickers. Status code: ' + response.status);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        console.log(data);
                        const groupedCards = Object.keys(data.stickers).map(identifier => {
                            const group = data.stickers[identifier];
                            const mainSticker = group[0];
                            const card = `
                                <div class="card mb-3">
                                    <h4 class="card-title">${identifier}</h4>
                                    <h5 class="card-title">${mainSticker.product_name}</h5>
                                    <div class="d-flex align-items-center">
                                        <img src="${mainSticker.image_link}" alt="${mainSticker.product_name}" class="img-fluid w-25 me-3">
                                        <div>
                                            <p class="card-text"><strong>Category:</strong> ${mainSticker.category}</p>
                                        </div>
                                    </div>
                                    <div class="accordion" id="accordion-${identifier}">
                                        <div class="accordion-item">
                                            <div id="details-content-${identifier}" class="details-container">
                                                <button class="btn btn-primary" onclick="loadDetails('${identifier}')">View Details</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            `;
                            return card;
                        }).join('');
                        container.innerHTML = groupedCards;
                        totalPages = data.pagination.total_pages;
                        if (searchTerm !== '') {
                            paginationContainer.style.visibility = 'hidden';
                        } else {
                            paginationContainer.style.visibility = 'visible';
                            renderPagination();
                        }
                    } else {
                        container.innerHTML = '<p>No stickers available for this group.</p>';
                    }
                })
                .catch(error => {
                    console.error('Error fetching stickers:', error);
                    container.innerHTML = '<p>An error occurred while loading stickers.</p>';
                });
        }



        function loadDetails(identifier) {
            const detailsContainer = document.getElementById(`details-content-${identifier}`);
            detailsContainer.innerHTML = 'Loading details...';
            console.log(identifier);
            console.log("DETAILS");
            fetch(`/sticker/get-product-details/${identifier}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const products = data.products;  // Burada products, bir dizi olmalı
                        let detailsHtml = '';

                        products.forEach(product => {
                            detailsHtml += `
                                <div class="product-details">
                                    <p><strong>IWASKU:</strong> ${product.iwasku}</p>
                                    <p><strong>Product Code:</strong> ${product.productCode}</p>
                                    <p><strong>Size:</strong> ${product.variationSize}</p>
                                    <p><strong>Color:</strong> ${product.variationColor}</p>
                                </div>
                            `;
                        });
                        detailsContainer.innerHTML = detailsHtml;
                    } else {
                        detailsContainer.innerHTML = 'Failed to load details.';
                    }
                })
                .catch(error => {
                    console.error('Error loading details:', error);
                    detailsContainer.innerHTML = 'Error loading details.';
                });
        }

        document.querySelectorAll('.accordion-button').forEach(button => {
            button.addEventListener('click', function() {
                const identifier = this.closest('.card').querySelector('.card-title').innerText;
                loadDetails(identifier);
            });
        });

        function renderPagination() {
            const paginationContainer = document.getElementById('pagination-container');
            paginationContainer.innerHTML = '';
            let paginationHTML = '';
            paginationHTML += `
            <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="loadStickers(selectedGroupId, 1)" aria-label="First">
                    <span aria-hidden="true">&laquo;&laquo;</span>
                </a>
            </li>`;

            paginationHTML += `
            <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="loadStickers(selectedGroupId, ${currentPage - 1})" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>`;

            const maxVisiblePages = 5;
            const firstVisiblePage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
            const lastVisiblePage = Math.min(totalPages, firstVisiblePage + maxVisiblePages - 1);

            for (let page = firstVisiblePage; page <= lastVisiblePage; page++) {
                paginationHTML += `
                <li class="page-item ${page === currentPage ? 'active' : ''}">
                    <a class="page-link" href="#" onclick="loadStickers(selectedGroupId, ${page})">${page}</a>
                </li>`;
            }

            paginationHTML += `
            <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="loadStickers(selectedGroupId, ${currentPage + 1})" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>`;

            paginationHTML += `
            <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                <a class="page-link" href="#" onclick="loadStickers(selectedGroupId, ${totalPages})" aria-label="Last">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                </a>
            </li>`;
            paginationContainer.innerHTML = paginationHTML;
        }

        function highlightSelectedGroup(groupId) {
            const groupLinks = document.querySelectorAll('.list-group-item');
            groupLinks.forEach(link => {
                if (parseInt(link.dataset.groupId) === groupId) {
                    link.classList.add('active');
                    link.setAttribute('aria-current', 'true');
                } else {
                    link.classList.remove('active');
                    link.removeAttribute('aria-current');
                }
            });
        }

        function selectGroup(groupName, groupId) {
            localStorage.setItem('group_id', groupId);
            document.getElementById("dropdownMenuButton").innerHTML = groupName;
            document.getElementById('searchInput').value = '';
            loadStickers(groupId, 1, searchTerm);
        }
    </script>
{% endblock %}
