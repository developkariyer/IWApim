{% extends 'sticker/base.html.twig' %}
{% block title %} Sticker {% endblock %}
{% block content %}


<div class="container mt-2">
    <div class="row">
        <div class="col-12">
            <div class="mt-3">
                <a href="{{ path('sticker_new_group') }}" class="btn btn-success w-100">New Group</a>
            </div>
            <div class="mt-3">
                <a href="{{ path('sticker_new') }}" class="btn btn-success w-100">New Sticker</a>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="row mt-2">
                <div class="col-6">
                    <input type="text" id="searchInput" placeholder="Search..." class="form-control mb-3" onkeyup="searchTable()">
                </div>
                <div class="col-6">
                    <div class="dropdown">
                        <button class="btn btn-primary dropdown-toggle w-100" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                            Select Group
                        </button>
                        <ul class="dropdown-menu w-100" aria-labelledby="dropdownMenuButton">
                            {% for group in groups %}
                                <li>
                                    <a class="dropdown-item text-truncate" href="#" onclick="loadStickers({{ group.id }})">
                                        {{ group.name }}
                                    </a>
                                </li>
                            {% else %}
                                <li>
                                    <span class="dropdown-item text-muted">No groups available.</span>
                                </li>
                            {% endfor %}
                        </ul>
                    </div>
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-12"  id="stickers-container" style="overflow-x: auto;">

                </div>
            </div>
        </div>
    </div>
</div>



{% endblock %}


{% block body_scripts %}
    <script>
        function loadStickers(groupId) {
            selectedGroupId = groupId;
            highlightSelectedGroup(groupId);
            const container = document.getElementById('stickers-container');
            container.innerHTML = '<p>Loading...</p>';

            fetch(`/sticker/get-stickers/${groupId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const cards = data.stickers.map(sticker => `
                    <div class="card mb-2">
                        <div class="row g-0">
                            <div class="col-9">
                                <div class="card-body p-2">
                                    <a href="${sticker.sticker_link}" class="card-title text-primary text-decoration-none m-0" target="_blank">
                                        ${sticker.product_name}
                                    </a>
                                    <p class="card-text text-muted small m-0">
                                        <strong>Code:</strong> ${sticker.product_code} <br>
                                        <strong>Iwasku:</strong> ${sticker.iwasku} <br>
                                        <strong>Category:</strong> ${sticker.category}
                                        <strong>Attributes:</strong> ${sticker.attributes}
                                    </p>
                                </div>
                            </div>
                            <div class="col-3">
                                <img src="${sticker.image_link}" class="img-fluid rounded-start" alt="Image" style="max-height: 100px; max-width: 100%; height: auto; width: auto;">
                            </div>

                        </div>
                    </div>
                `).join('');
                        container.innerHTML = cards;
                    } else {
                        container.innerHTML = '<p>No stickers available for this group.</p>';
                    }
                })
                .catch(error => {
                    console.error('Error fetching stickers:', error);
                    container.innerHTML = '<p>An error occurred while loading stickers.</p>';
                });
        }

        function searchTable() {
            var input, filter, table, tr, td, i, j, txtValue;
            input = document.getElementById("searchInput");
            filter = input.value.toUpperCase();
            table = document.querySelector("table");
            tr = table.getElementsByTagName("tr");

            for (i = 1; i < tr.length; i++) {
                tr[i].style.display = "none";
                td = tr[i].getElementsByTagName("td");
                for (j = 0; j < td.length; j++) {
                    if (td[j]) {
                        txtValue = td[j].textContent || td[j].innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            tr[i].style.display = "";
                            break;
                        }
                    }
                }
            }
        }
        function highlightSelectedGroup(groupId) {
            const groupLinks = document.querySelectorAll('.list-group-item');
            groupLinks.forEach(link => {
                if (parseInt(link.dataset.groupId) === groupId) {
                    link.classList.add('active');
                    link.setAttribute('aria-current', 'true');
                } else {
                    link.classList.remove('active');
                    link.removeAttribute('aria-current');
                }
            });
        }
    </script>
{% endblock %}
