{# ozon.html.twig #}
{% extends 'ozon/base.html.twig' %}
{% block title %}Ozon Listing{% endblock %}
{% block content %}
    <div class="accordion" id="ozonAccordion">
        <!-- Level 0: ListingTemplate Objects -->
        {% for task in tasks %}
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingTask{{ task.id }}">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTask{{ task.id }}" aria-expanded="false" aria-controls="collapseTask{{ task.id }}">
                        Ozon Listing: {{ task.key }}
                    </button>
                </h2>
                <div id="collapseTask{{ task.id }}" class="accordion-collapse collapse" aria-labelledby="headingTask{{ task.id }}" data-bs-parent="#ozonAccordion" data-type="parent">
                    <div class="accordion-body">
                        <div class="loading-spinner text-center" id="loadingTask{{ task.id }}" style="display: none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                        <div id="parentProductAccordion{{ task.id }}"></div>

                        <form method="POST" action="/ozon/addproduct/{{ task.id }}" class="mt-3">
                            <div class="input-group mb-3 mt-3">
                                <input type="text" class="form-control" name="iwasku" placeholder="Eklenecek IWASKU" aria-label="Eklenecek IWASKU">
                                <button class="btn btn-primary" type="submit">Ekle</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        {% endfor %}

        <!-- New Task Form as an Accordion Item -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingNewTask">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseNewTask" aria-expanded="false" aria-controls="collapseNewTask">
                    Add New Task
                </button>
            </h2>
            <div id="collapseNewTask" class="accordion-collapse collapse" aria-labelledby="headingNewTask" data-bs-parent="#ozonAccordion">
                <div class="accordion-body">
                    {{ form_start(newTaskForm, {'attr': {'class': 'mt-3'}}) }}
                    {{ form_row(newTaskForm.marketplace) }}
                    {{ form_row(newTaskForm.taskName) }}
                    {{ form_row(newTaskForm.save) }}
                    {{ form_end(newTaskForm) }}
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block body_scripts %}
    <script>
        $(document).ready(function () {
            $(document).on('show.bs.collapse', '.accordion-collapse[data-type="parent"]', function () {
                const taskId = $(this).attr('id').replace('collapseTask', '');
                const parentAccordion = $(`#parentProductAccordion${taskId}`);
                const loadingSpinner = $(`#loadingTask${taskId}`);
                if (!parentAccordion.data('loaded')) {
                    loadingSpinner.show();
                    parentAccordion .hide();
                    $.get(`/ozon/task/${taskId}`, function (data) {
                        parentAccordion.html(data);
                        parentAccordion.data('loaded', true);
                        loadingSpinner.hide();
                        parentAccordion.show();
                    });
                }
            });
            $(document).on('show.bs.collapse', '.accordion-collapse[data-type="child"]', function () {
                const parentProductId = $(this).attr('id').replace('collapseParent', '');
                const taskId = $(this).closest('.accordion').data('task-id');
                const childAccordion = $(`#childProducts${parentProductId}`);
                const loadingSpinner = $(`#loadingChild${parentProductId}`);
                if (!childAccordion.data('loaded')) {
                    loadingSpinner.show();
                    childAccordion.hide();
                    $.get(`/ozon/product/${taskId}/${parentProductId}`, function (data) {
                        childAccordion.html(data);
                        childAccordion.data('loaded', true);
                        loadingSpinner.hide();
                        childAccordion.show();
                    });
                }
            });
            document.addEventListener('DOMContentLoaded', function () {
                const form = document.getElementById('ozonTaskProductForm');
                const responseContainer = document.getElementById('form-response');
                form.addEventListener('submit', function (e) {
                    e.preventDefault();
                    const formData = new FormData(form);
                    const actionUrl = form.getAttribute('action');
                    fetch(actionUrl, {
                        method: 'POST',
                        body: formData,
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.text();
                        })
                        .then(data => {
                            const formContainer = form.parentElement;
                            formContainer.innerHTML = data;
                            const newForm = formContainer.querySelector('form');
                            if (newForm) {
                                newForm.addEventListener('submit', form.submit.bind(newForm));
                            }
                            responseContainer.innerHTML = `<div class="alert alert-success">Form updated successfully!</div>`;
                        })
                        .catch(error => {
                            responseContainer.innerHTML = `<div class="alert alert-danger">Error: ${error.message}</div>`;
                        });
                });
            });
        });
    </script>
{% endblock %}
