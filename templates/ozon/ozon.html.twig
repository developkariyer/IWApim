{# ozon.html.twig #}
{% extends 'ozon/base.html.twig' %}
{% block title %}Ozon Listing{% endblock %}
{% block content %}
    <div class="accordion" id="ozonAccordion">
        <!-- Level 0: ListingTemplate Objects -->
        {% for task in tasks %}
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingTask{{ task.id }}">
                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTask{{ task.id }}" aria-expanded="false" aria-controls="collapseTask{{ task.id }}">
                        Ozon Listing: {{ task.key }}
                    </button>
                </h2>
                <div id="collapseTask{{ task.id }}" class="accordion-collapse collapse" aria-labelledby="headingTask{{ task.id }}" data-bs-parent="#ozonAccordion" data-type="parent" data-task-id="{{ task.id }}">
                    <div class="accordion-body">
                        <div class="loading-spinner text-center" id="loadingTask{{ task.id }}" style="display: none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        </div>
                        <div id="parentProductAccordion{{ task.id }}" data-task-id="{{ task.id }}"></div>

                        <form method="POST" action="/ozonaddproduct/{{ task.id }}" class="mt-3">
                            <div class="input-group mb-3 mt-3">
                                <input type="text" class="form-control" name="iwasku" placeholder="Eklenecek IWASKU (virgül, boşluk veya tab ile birden çok girilebilir)" aria-label="Eklenecek IWASKU">
                                <button class="btn btn-primary" type="submit">Ekle</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        {% endfor %}

        <!-- New Task Form as an Accordion Item -->
        <div class="accordion-item">
            <h2 class="accordion-header" id="headingNewTask">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseNewTask" aria-expanded="false" aria-controls="collapseNewTask">
                    Add New Task
                </button>
            </h2>
            <div id="collapseNewTask" class="accordion-collapse collapse" aria-labelledby="headingNewTask" data-bs-parent="#ozonAccordion">
                <div class="accordion-body">
                    {{ form_start(newTaskForm, {'attr': {'class': 'mt-3'}}) }}
                    {{ form_row(newTaskForm.marketplace) }}
                    {{ form_row(newTaskForm.taskName) }}
                    {{ form_row(newTaskForm.save) }}
                    {{ form_end(newTaskForm) }}
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block body_scripts %}
    <script>
        $(document).ready(function () {
            const taskId = '{{ taskId|default(null) }}';

            const loadParentAccordionContent = (taskId) => {
                const parentAccordion = $(`#parentProductAccordion${taskId}`);
                const loadingSpinner = $(`#loadingTask${taskId}`);
                if (!parentAccordion.data('loaded')) {
                    loadingSpinner.show();
                    parentAccordion.hide();
                    $.get(`/ozontask/${taskId}`, function (data) {
                        parentAccordion.html(data);
                        parentAccordion.data('loaded', true);
                        loadingSpinner.hide();
                        parentAccordion.show();
                    });
                }
            };

            if (taskId) {
                const taskAccordion = $(`#collapseTask${taskId}`);
                if (taskAccordion.length) {
                    taskAccordion.collapse('show');
                    loadParentAccordionContent(taskId); // Load content manually
                }
            }

            $(document).on('show.bs.collapse', '.accordion-collapse[data-type="parent"]', function () {
                const taskId = $(this).data('task-id');
                loadParentAccordionContent(taskId);
            });

            const loadProductModifyForm = (taskId, parentProductId) => {
                const modifyForm = $(`#childProducts${taskId}_${parentProductId}`);
                const loadingSpinner = $(`#loadingChild${taskId}_${parentProductId}`);
                if (!modifyForm.data('loaded')) {
                    loadingSpinner.show();
                    modifyForm.hide();
                    $.get(`/ozonproduct/${taskId}/${parentProductId}`, function (data) {
                        modifyForm.html(data);
                        modifyForm.data('loaded', true);
                        loadingSpinner.hide();
                        modifyForm.show();
                    });
                }
            };

            $(document).on('click', 'button[data-action="edit-product"]', function () {
                const parentProductId = $(this).closest('[data-parent-product-id]').data('parent-product-id');
                const taskId = $(this).closest('[data-task-id]').data('task-id');
                const button = $(this);
                loadProductModifyForm(taskId, parentProductId);
                button.parent().hide();
            });

            console.log('Initializing Select2 on page load');
            initializeSelect2();

            $(document).on('ajaxComplete', function () {
                console.log('Initializing Select2 after AJAX request');
                initializeSelect2();
            });

            function initializeSelect2() {
                $('.needs-initialization').each(function () {
                    $(this)
                        .removeClass('needs-initialization')
                        .select2({
                            ajax: {
                                url: function () {
                                    return $(this).data('ajax-url');
                                },
                                dataType: 'json',
                                delay: 250,
                                data: function (params) {
                                    return {
                                        q: params.term,
                                    };
                                },
                                processResults: function (data) {
                                    return {
                                        results: data.map(item => ({
                                            id: item.id,
                                            text: item.text,
                                        })),
                                    };
                                },
                            },
                            placeholder: function () {
                                return $(this).data('placeholder');
                            },
                            minimumInputLength: $(this).data('minimum-input-length') || 1,
                        });
                    console.log('Select2 with id ' + $(this).attr('id') + ' initialized');
                });
            }

        });
    </script>
{% endblock %}
